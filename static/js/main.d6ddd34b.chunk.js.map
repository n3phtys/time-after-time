{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["Time","str","this","hours","minutes","arr","split","parseInt","duration","fullMin","minutesCeil","additionalHours","Math","floor","padStart","ceil","other","toSeconds","Duration","isNaN","seconds","parseTime","console","log","s","AppState","fragment","segments","dur","shift","toString","timesteps","map","t","window","location","hash","asUrlFragment","forEach","step","ShowTime","props","appState","durationIs","durSeconds","i","length","secondsToTime","computeTotalDuration","durationShould","toFixed","remainingDurationForLastSegment","timeReachedFulltime","addDuration","TimeStepList","listItems","index","type","value","onChange","event","target","writeToUrl","reload","onClick","splice","useState","d","Date","getHours","getMinutes","now","time","setTime","dura","setDura","push","sort","a","b","App","substring","className","multiplier","h","indexOf","m","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6ddd34b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React, { useState } from \"react\";\n\nclass Time {\n  constructor(str) {\n    this.hours = 8;\n    this.minutes = 0;\n    if (!!str) {\n      const arr = str.split(\":\");\n      if (!!arr[0]) {\n        this.hours = !!arr[0] ? parseInt(arr[0]) : 8;\n        this.minutes = !!arr[1] ? parseInt(arr[1]) : 0;\n      }\n    }\n  }\n\n  addDuration(duration) {\n    const fullMin = duration.minutesCeil() + this.minutes;\n    const remainingMin = fullMin;\n    const additionalHours = Math.floor(fullMin / 60);\n    return (\n      (\n        \"\" +\n        (this.hours +\n          duration.hours() +\n          Math.floor(fullMin / 60) +\n          additionalHours)\n      ).padStart(2, \"\") +\n      \":\" +\n      (\"\" + Math.ceil(fullMin % 60)).padStart(2, \"\")\n    );\n  }\n\n  toSeconds() {\n    return (this.hours * 60 + this.minutes) * 60;\n  }\n\n  secondsToTime(other) {\n    return other.toSeconds() - this.toSeconds();\n  }\n\n  toString() {\n    return `${(\"\" + this.hours).padStart(2, \"0\")}:${(\n      \"\" + this.minutes\n    ).padStart(2, \"0\")}`;\n  }\n}\n\nclass Duration {\n  constructor(str) {\n    if (!isNaN(str)) {\n      this.seconds = str;\n    } else {\n      this.seconds = !!str ? parseTime(str) : (8 * 60 - 6) * 60;\n    }\n    console.log(this.seconds);\n  }\n\n  hours() {\n    return Math.floor(this.seconds / 3600);\n  }\n  minutesCeil() {\n    return Math.ceil((this.seconds % 3600) / 60);\n  }\n\n  toString() {\n    let s = this.seconds;\n    const hours = Math.floor(s / 3600);\n    s -= hours * 3600;\n    const minutes = Math.floor(s / 60);\n    s -= minutes * 60;\n    const seconds = Math.floor(s);\n    let str = \"\";\n    if (!!hours) {\n      str += hours + \"h\";\n    }\n    if (!!minutes) {\n      str += minutes + \"m\";\n    }\n    if (!!seconds) {\n      str += seconds + \"s\";\n    }\n    if (!str) str += 0;\n    return str;\n  }\n}\n\nclass AppState {\n  constructor(fragment) {\n    if (!fragment) fragment = \"p/7h54m/8:00\";\n    const segments = fragment.split(\"/\");\n    const mode = segments.shift();\n    const dur = segments.shift();\n    console.log(dur);\n    this.duration = new Duration(dur);\n    console.log(this.duration.toString());\n    console.log(segments);\n    this.timesteps = segments.map((t) => new Time(t));\n  }\n\n  writeToUrl() {\n    window.location.hash = this.asUrlFragment();\n  }\n\n  get totalDurationString() {}\n\n  get endOfDayString() {}\n\n  asUrlFragment() {\n    let str = \"p/\";\n    str += this.duration.toString();\n    this.timesteps.forEach((step) => {\n      str += \"/\" + step.toString();\n    });\n    return str;\n  }\n}\n\nfunction App() {\n  let fragment = !!window.location.hash\n    ? window.location.hash.substring(1)\n    : \"\";\n  let appState = new AppState(fragment);\n  appState.writeToUrl();\n  console.log(appState);\n\n  return (\n    <div className=\"App\">\n      <div>\n        <hr></hr>\n        <ShowTime appState={appState} />\n        <hr></hr>\n        <TimeStepList appState={appState} />\n      </div>\n    </div>\n  );\n}\n\nfunction ShowTime(props) {\n  const appState = props.appState;\n  const durationIs = computeTotalDuration(appState.timesteps);\n  const durationShould = appState.duration;\n  if (appState.timesteps.length % 2 == 0) {\n    // we're currently out\n    return (\n      <p>\n        You have worked <b>{durationIs.toString()}</b> of your total of{\" \"}\n        {durationShould.toString()} for today. That is\n        <b>\n          {((durationIs.seconds / durationShould.seconds) * 100).toFixed(2)} %\n        </b>{\" \"}\n        of your SHOULD time.\n      </p>\n    );\n  } else {\n    const remainingDurationForLastSegment = new Duration(\n      durationShould.seconds - durationIs.seconds\n    );\n    const currentLast = appState.timesteps[appState.timesteps.length - 1];\n    const timeReachedFulltime = currentLast.addDuration(\n      remainingDurationForLastSegment\n    );\n    return (\n      <p>\n        You will be finished with work for today at\n        <b>{timeReachedFulltime.toString()}</b>.\n      </p>\n    );\n  }\n}\n\nfunction TimeStepList(props) {\n  const appState = props.appState;\n  const timesteps = appState.timesteps;\n\n  const listItems = timesteps.map((step, index) => {\n    const onChange = (event) => {\n      appState.timesteps[index] = new Time(event.target.value);\n      appState.writeToUrl();\n      window.location.reload();\n    };\n    const onDelete = (event) => {\n      appState.timesteps.splice(index, 1);\n      appState.writeToUrl();\n      window.location.reload();\n    };\n    return (\n      <li key={index}>\n        {index % 2 == 0 ? \"IN\" : \"OUT\"}{\" \"}\n        <input type=\"time\" value={step} onChange={onChange} />\n        <button onClick={onDelete}>X</button>\n      </li>\n    );\n  });\n\n  const [time, setTime] = useState(now());\n  const [dura, setDura] = useState(appState.duration);\n\n  return (\n    <div>\n      <h2>My in / out times</h2>\n      <ul>{listItems}</ul>\n      <div>\n        <label>Add:</label>\n        <input\n          type=\"time\"\n          value={time.toString()}\n          onChange={(event) => setTime(new Time(event.target.value))}\n        />\n        <button\n          onClick={() => {\n            appState.timesteps.push(time);\n            appState.timesteps.sort(\n              (a, b) => a.hours * 60 + a.minutes - (b.hours * 60 + b.minutes)\n            );\n            appState.writeToUrl();\n            window.location.reload();\n          }}\n        >\n          +\n        </button>\n      </div>\n      <div>\n        <hr></hr>\n        <input\n          type=\"text\"\n          value={dura.toString()}\n          onChange={(event) => {\n            setDura(new Duration(event.target.value));\n          }}\n        />\n        <button\n          onClick={() => {\n            appState.duration = dura;\n            appState.writeToUrl();\n            window.location.reload();\n          }}\n        >\n          SET\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\nfunction now() {\n  const d = new Date();\n  return new Time(\n    (\"\" + d.getHours()).padStart(2, \"0\") +\n      \":\" +\n      (\"\" + d.getMinutes()).padStart(2, \"0\")\n  );\n}\n\nfunction computeTotalDuration(timesteps) {\n  let durSeconds = 0;\n  console.log([timesteps, durSeconds]);\n  for (let i = 0; i < timesteps.length - 1; i += 2) {\n    durSeconds += timesteps[i].secondsToTime(timesteps[i + 1]);\n    console.log([i, durSeconds]);\n  }\n  console.log(\"durSeconds: \" + durSeconds);\n  return new Duration(durSeconds);\n}\n\nfunction parseTime(str, multiplier = 3600) {\n  console.log(\"parsing: \" + str);\n  if (!str) return 0;\n  const h = str.indexOf(\"h\");\n  const m = str.indexOf(\"m\");\n  const s = str.indexOf(\"s\");\n  if (h >= 0) {\n    return (\n      parseInt(str.substring(0, h)) * 3600 +\n      parseTime(str.substring(h + 1), multiplier / 60)\n    );\n  } else if (m >= 0) {\n    return (\n      parseInt(str.substring(0, m)) * 60 +\n      parseTime(str.substring(m + 1), multiplier / 60)\n    );\n  } else if (s >= 0) {\n    return (\n      parseInt(str.substring(0, s)) * 1 +\n      parseTime(str.substring(s + 1), multiplier / 60)\n    );\n  } else {\n    return parseInt(str) * multiplier;\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"bootstrap/dist/css/bootstrap.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}